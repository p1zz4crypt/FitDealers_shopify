name: Shopify Theme CI/CD Pipeline

on:
  push:
    branches: [dev, stage, main, master]
  pull_request:
    branches: [dev, stage, main, master]

env:
  SHOPIFY_STORE_URL: radianz-store.myshopify.com
  THEME_DEV_ID: 152975179991
  THEME_STAGE_ID: 152976457943
  THEME_PROD_ID: 152685609175

jobs:
  # Validaci√≥n del tema
  validate:
    name: Validate Theme
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Skip validation
      run: echo "‚úÖ Skipping theme validation for now..."

  # Paso de verificaci√≥n
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Check repository content
      run: |
        echo "‚úÖ Repository structure looks good!"
        ls -la

  # Despliegue a desarrollo
  deploy-dev:
    name: Deploy to Development
    needs: [test]
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Shopify CLI
      run: |
        npm install -g @shopify/cli @shopify/theme
        
    - name: Deploy to Development
      env:
        SHOPIFY_CLI_TOKEN: ${{ secrets.SHOPIFY_CLI_TOKEN }}
        SHOPIFY_FLAG_STORE: ${{ env.SHOPIFY_STORE_URL }}
        SHOPIFY_CLI_TTY: 0
        CI: true
      run: |
        echo "üöÄ Deploying to Development..."
        
        # Verificar que el token est√© configurado
        if [ -z "$SHOPIFY_CLI_TOKEN" ]; then
          echo "‚ùå Error: SHOPIFY_CLI_TOKEN no est√° configurado"
          exit 1
        fi
        
        # Realizar el despliegue usando --password
        shopify theme push \
          --theme ${{ env.THEME_DEV_ID }} \
          --store $SHOPIFY_FLAG_STORE \
          --password $SHOPIFY_CLI_TOKEN \
          --no-color \
          --json

  # Despliegue a staging
  deploy-stage:
    name: Deploy to Staging
    needs: [test]
    if: github.ref == 'refs/heads/stage'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Shopify CLI
      run: |
        npm install -g @shopify/cli @shopify/theme
        
    - name: Deploy to Staging
      env:
        SHOPIFY_CLI_TOKEN: ${{ secrets.SHOPIFY_CLI_TOKEN }}
        SHOPIFY_FLAG_STORE: ${{ env.SHOPIFY_STORE_URL }}
        SHOPIFY_CLI_TTY: 0
        CI: true
      run: |
        echo "üöÄ Deploying to Staging..."
        
        # Verificar que el token est√© configurado
        if [ -z "$SHOPIFY_CLI_TOKEN" ]; then
          echo "‚ùå Error: SHOPIFY_CLI_TOKEN no est√° configurado"
          exit 1
        fi
        
        # Realizar el despliegue usando --password
        shopify theme push \
          --theme ${{ env.THEME_STAGE_ID }} \
          --store $SHOPIFY_FLAG_STORE \
          --password $SHOPIFY_CLI_TOKEN \
          --no-color \
          --json

  # Despliegue a producci√≥n
  deploy-prod:
    name: Deploy to Production
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Shopify CLI
      run: |
        npm install -g @shopify/cli @shopify/theme
        
    - name: Deploy to Production
      env:
        SHOPIFY_CLI_TOKEN: ${{ secrets.SHOPIFY_CLI_TOKEN }}
        SHOPIFY_FLAG_STORE: ${{ env.SHOPIFY_STORE_URL }}
        SHOPIFY_CLI_TTY: 0
        CI: true
        NODE_NO_WARNINGS: 1
      run: |
        echo "üöÄ Deploying to Production..."
        
        # Verificar que el token est√© configurado
        if [ -z "$SHOPIFY_CLI_TOKEN" ]; then
          echo "‚ùå Error: SHOPIFY_CLI_TOKEN no est√° configurado"
          exit 1
        fi
        
        # Paso 1: Subir archivos al tema sin publicar
        echo "üì§ Subiendo archivos al tema de producci√≥n..."
        shopify theme push \
          --theme ${{ env.THEME_PROD_ID }} \
          --store $SHOPIFY_FLAG_STORE \
          --password $SHOPIFY_CLI_TOKEN \
          --allow-live \
          --no-color \
          --json
        
        # Paso 2: Publicar el tema (opcional si ya es live)
        echo "üåü Publicando tema..."
        shopify theme publish \
          --theme ${{ env.THEME_PROD_ID }} \
          --store $SHOPIFY_FLAG_STORE \
          --password $SHOPIFY_CLI_TOKEN \
          --no-color